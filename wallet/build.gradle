apply plugin: 'com.android.application'
apply plugin: 'androidsvgdrawable'

configurations {
    all*.exclude group: 'com.google.android', module: 'android'
    all*.exclude group: 'androidx.legacy', module: 'legacy-support-core-ui'
    all*.exclude group: 'androidx.legacy', module: 'legacy-support-core-utils'
}

dependencies {
    implementation project(':integration-android')
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.core:core:1.1.0'
    implementation 'androidx.fragment:fragment:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation "androidx.sqlite:sqlite:2.0.1"
    implementation "androidx.room:room-runtime:2.1.0"
    annotationProcessor "androidx.room:room-compiler:2.1.0"
    implementation 'org.bitcoinj:bitcoinj-core:0.15.5'
    implementation 'com.google.protobuf:protobuf-java:3.7.1'
    implementation 'com.google.guava:guava:28.1-android'
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.squareup.okhttp3:okhttp:3.12.6'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.6'
    implementation 'com.squareup.moshi:moshi:1.6.0'
    implementation 'org.slf4j:slf4j-api:1.7.28'
    implementation 'com.github.tony19:logback-android:2.0.0'
    testImplementation 'junit:junit:4.12'
}

ext {
    archivesBaseName = 'bitcoin-wallet'
}

android {
    compileSdkVersion 'android-28'
    buildToolsVersion '29.0.2'

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    defaultConfig {
        applicationId 'de.schildbach.wallet_test'
        generatedDensities = ['hdpi', 'xhdpi']

        dexOptions {
            preDexLibraries false
        }
    }

    buildTypes {
        all {
            minifyEnabled true
            shrinkResources true
            proguardFile 'proguard.cfg'
        }
        debug {
            debuggable true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        test {
            java.srcDirs = ['test']
            resources.srcDirs = ['test']
        }
    }

    packagingOptions {
        exclude 'META-INF/*.version'
        exclude 'META-INF/proguard/**'
        exclude '**/*.proto'
        exclude 'org/bouncycastle/x509/*.properties'
        exclude 'okhttp3/internal/publicsuffix/publicsuffixes.gz'
        exclude 'org/bitcoinj/crypto/mnemonic/wordlist/english.txt'
        exclude 'org/bitcoinj/crypto/cacerts'
        exclude 'org.bitcoin.production.checkpoints.txt'
        exclude 'org.bitcoin.test.checkpoints.txt'
    }
}

task svgToPngMipmap(type: fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask) {
    from = files('graphics/mipmap')
    to = file('res')
    targetedDensities = ['hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    outputFormat = 'PNG'
    outputType = 'mipmap'
}
